@page "/userprofile"
@using CarApp.Services.User
@using Shared.Dto
@inject IUserProfileService UserProfileService

<h3>User Profile</h3>

<EditForm Model="userProfile" OnValidSubmit="HandleUpdate">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>First Name:</label>
        <InputText @bind-Value="userProfile.UserFirstname" />
    </div>

    <div>
        <label>Last Name:</label>
        <InputText @bind-Value="userProfile.UserLastname" />
    </div>

    <div>
        <label>Title:</label>
        <InputText @bind-Value="userProfile.Title" />
    </div>

    <div>
        <label>Phone Number:</label>
        <InputNumber @bind-Value="userProfile.Phonenr" />
    </div>

    <div>
        <label>Username:</label>
        <InputText @bind-Value="userProfile.Username" readonly />
    </div>

    <div>
        <label>Email:</label>
        <InputText @bind-Value="userProfile.Email" />
    </div>

    <button type="submit">Save Changes</button>

    <NavLink class="btn btn-secondary" href="/deleteuser">Manage Users</NavLink>
</EditForm>

@if (updateMessage != null)
{
    <p>@updateMessage</p>
}

@code {
    private UpdateUserDto userProfile = new UpdateUserDto();
    private string updateMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            userProfile = await UserProfileService.GetUserProfileAsync();
        }
        catch (Exception ex)
        {
            updateMessage = $"Failed to load profile: {ex.Message}";
        }
    }

    private async Task HandleUpdate()
    {
        try
        {
            await UserProfileService.UpdateUserProfileAsync(userProfile);
            updateMessage = "Profile updated successfully.";
        }
        catch (Exception ex)
        {
            updateMessage = $"An error occurred: {ex.Message}";
        }
    }
}