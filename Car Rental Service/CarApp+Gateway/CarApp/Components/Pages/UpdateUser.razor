@page "/updateUser"
@using Shared.Dto
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager


<h3>Update User</h3>


<EditForm Model="updateUser" OnValidSubmit="HandleUpdate">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>First Name:</label>
        <InputText @bind-Value="updateUser.UserFirstname" />
    </div>

    <div>
        <label>Last Name:</label>
        <InputText @bind-Value="updateUser.UserLastname" />
    </div>

    <div>
        <label>Title:</label>
        <InputText @bind-Value="updateUser.Title" />
    </div>

    <div>
        <label>Phone Number:</label>
        <InputNumber @bind-Value="updateUser.Phonenr" />
    </div>

    <div>
        <label>Username:</label>
        <InputText @bind-Value="updateUser.Username" />
    </div>

    <div>
        <label>Email:</label>
        <InputText @bind-Value="updateUser.Email" />
    </div>

    <div>
        <label>Password:</label>
        <InputText @bind-Value="updateUser.Password" type="password" />
    </div>

    <button type="submit">Update</button>
</EditForm>

@if (updateMessage != null)
{
    <p>@updateMessage</p>
}

@code {
    private UpdateUserDTO updateUser = new UpdateUserDTO();
    private string updateMessage;

    private async Task HandleUpdate()
    {
        try
        {
            var response = await HttpClient.PostAsJsonAsync("api/users/updateUser", updateUser);
            if (response.IsSuccessStatusCode)
            {
                updateMessage = "User updated successfully.";
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                updateMessage = "Failed to update user.";
            }
        }
        catch (Exception ex)
        {
            updateMessage = $"An error occurred: {ex.Message}";
        }
    }
}