@page "/addcar"
@inject HttpClient Http
@using Shared.Dto

<h3>Add a New Car</h3>

<EditForm Model="_car" OnValidSubmit="HandleAddCar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="Model" class="form-label">Model</label>
        <InputText id="Model" class="form-control" @bind-Value="_car.Model" />
    </div>
    
    <div class="mb-3">
        <label for="Color" class="form-label">Color</label>
        <InputText id="Color" class="form-control" @bind-Value="_car.Color" />
    </div>

    <div class="mb-3">
        <label for="Seats" class="form-label">Seats</label>
        <InputNumber id="Seats" class="form-control" @bind-Value="_car.Seats" />
    </div>

    <button type="submit" class="btn btn-primary">Add Car</button>
</EditForm>

@if (_successMessage != null)
{
    <div class="alert alert-success mt-3">@_successMessage</div>
}
@if (_errorMessage != null)
{
    <div class="alert alert-danger mt-3">@_errorMessage</div>
}

@code {
    private AddCarRequestDto _car = new AddCarRequestDto();
    private string? _successMessage;
    private string? _errorMessage;

    private async Task HandleAddCar()
    {
        _successMessage = null;
        _errorMessage = null;
        
        try
        {
            var response = await Http.PostAsJsonAsync("api/car/add", _car);
            if (response.IsSuccessStatusCode)
            {
                _successMessage = "Car added successfully!";
                _car = new AddCarRequestDto(); 
            }
            else
            {
                _errorMessage = "Failed to add car. Please try again.";
            }
        }
        catch (Exception ex)
        {
            _errorMessage = $"Error: {ex.Message}";
        }
    }
}