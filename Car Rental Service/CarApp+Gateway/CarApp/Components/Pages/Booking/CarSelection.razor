@page "/carselection"
@using Shared.Dto
@using Shared.Dto.Car
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager

<h3>Select a Car</h3>

@if (cars == null)
{
    <p>Loading...</p>
}
else if (cars.Any())
{
    <div class="car-list">
        @foreach (var car in cars)
        {
            <div class="car-item">
                <h4>@car.Manufacturer @car.Model (@car.YearProduced)</h4>
                <p><strong>VIN:</strong> @car.Vin</p>
                <p><strong>Color:</strong> @car.Color</p>
                <p><strong>Seats:</strong> @car.Seats</p>
                <p><strong>Range:</strong> @car.CarRange km</p>
                <p><strong>Location:</strong> Hub #@car.LocationHubRef</p>
                <button class="select-button" @onclick="() => SelectCar(car.CarId)">Select</button>
            </div>
        }
    </div>
}
else
{
    <p>No cars available.</p>
}

@code {
    private List<CarDto> cars = new();

    protected override async Task OnInitializedAsync()
    {
        var client = HttpClientFactory.CreateClient("AuthorizedClient");

        try
        {
            cars = await client.GetFromJsonAsync<List<CarDto>>("api/car");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching cars: {ex.Message}");
        }
    }

    private void SelectCar(int carId)
    {
        NavigationManager.NavigateTo($"/booking-details/{carId}");
    }
}